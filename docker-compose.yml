version: '3.1'

volumes:
  mongodb:
  mongoexpress:
  pg:
  pgadminer:

networks:
  kubedev:
    driver: bridge

services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongouser
      MONGO_INITDB_ROOT_PASSWORD: mongopwd
    volumes:
      - mongodb:/moviedb
    networks:
      - kubedev

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongouser
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongopwd
      ME_CONFIG_MONGODB_URL: mongodb://mongouser:mongopwd@mongo:27017/
    volumes:
      - mongoexpress:/mgexpressmoviedb
    depends_on:
      - mongo
    networks:
      - kubedev

  movies:
    build: ./movie/src
    ports:
      - 8181:8181
    environment:
      MONGODB_URI: mongodb://mongouser:mongopwd@mongo:27017/admin
    networks:
      - kubedev
    depends_on:
      - mongo

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: Pg@123
      POSTGRES_USER: pguser
      POSTGRES_DB: pguser
    volumes:
      - pg:/pgdb
    networks:
      - kubedev

  adminer:
    image: adminer
    restart: always
    ports:
      - 3001:8080
    volumes:
      - pg:/pgadminer
    networks:
      - kubedev
    depends_on:
      - postgres

  review:
    build: ./review/src
    ports:
      - 8282:80
    environment:
      ConnectionStrings__MyConnection: Host=postgres;Database=pguser;Username=pguser;Password=Pg@123;
    networks:
      - kubedev
    depends_on:
      - postgres

  presentation:
    build: ./presentation/src
    ports:
      - 4000:5000
    environment:
      MOVIE_SERVICE_URI: http://movies:8181
      REVIEW_SERVICE_URI: http://review:8282
    networks:
      - kubedev
    depends_on:
      - movies
      - review
    
